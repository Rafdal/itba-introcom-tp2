################################################################################
#                                                                              #
#    Micro Series 6801 Assembler V2.00/DOS              12/Apr/21  18:25:10    #
#                                                                              #
#       Source   =   tp2_p07.msa                                               #
#       List     =   tp2_p07.lst                                               #
#       Object   =   tp2_p07.r07                                               #
#       Options  =                                                             #
#                                                                              #
#                                               (c) Copyright IAR Systems 1990 #
################################################################################


    1                 *****************************************************************************************************************
    2                 *               TP2     EJERCICIO 7                     GRUPO 1                                                 *
    3                 *                                                                                                               *
    4                 * Consigna:                                                                                                     *
    5                 *       Escribir un programa que sume el contenido de las posiciones de memorias comprendidas                   *
    6                 *       entre $5000 y $5010, y guarde el resultado a partir de la dirección $3000.                              *
    7                 *****************************************************************************************************************
    8  0000                   p68H11
    9                 
   10  5000           begPos  EQU     $5000           Posición de memoria inicial
   11  5010           endPos  EQU     $5010           Posición de memoria final
   12                 
   13  3000           outPos  EQU     $3000           Posición de memoria en la que guardo el resultado
   14                 
   15  0010           dif     EQU     endPos-begPos   Saco a diferencia entre la posición inicial y la final
   16                 
   17                 
   18  2000                   ORG     $2000           
   19  2000           main    EQU     *
   20  2000 CE5000            ldx     #begPos         Cargo la posición de memoria inicial de la sumatoria, en X
   21  2003 18CE0000          ldy     #0              Inicio Y en cero
   22                 
   23  2007 8610              ldaa    #dif            Cargo la cantidad de veces que acumularé valores en Y
   24  2009 E600      repite  ldab    0,X             Cargo un valor de memoria (en la posición X) en B
   25  200B 183A              aby                     Sumo B a Y (Y=Y+B)
   26  200D 08                inx                     Incremento X para ir a la siguiente posición de memoria
   27  200E 4A                deca                    Decremento la cantidad de repeticiones restantes
   28  200F 26F8              bne     repite          Si las repeticiones que restan no son cero, vuelve a repetir
   29                 
   30  2011 18FF3000          sty     outPos          Una vez terminada la suma, guardo el resultado a partir de outPos
   31                 
   32                 
   33  2015 7E2015    fin     jmp     fin
   34  2018                   END

    Errors:  None         ###########
    Bytes:   24           # tp2_p07 #
    CRC:     4A04         ###########

